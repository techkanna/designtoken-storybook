{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "TodosService",
            "id": "injectable-TodosService-8ce7c165ad919089d0529f29d0064cec",
            "file": "src/app/services/todos.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getTodos",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodosService {\n\n  constructor() { }\n\n  getTodos(){\n    return [\n      {\n        id:1,\n        title:'todo one',\n        completed:false,\n      },\n      {\n        id:2,\n        title:'todo two',\n        completed:true,\n      },\n      {\n        id:3,\n        title:'todo three',\n        completed:false,\n      }\n    ];\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-8fbd201a1f2a344dde9a7dc241c39c5c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../scss/styles.scss\";\r\n.layout {\r\n  min-height: 100vh;\r\n  background-color: $token-colors-primary;\r\n  color: set-text-col($token-colors-primary);\r\n\r\n  .wrapper {\r\n    display: flex;\r\n    width: 91%;\r\n    margin: 0 auto;\r\n    padding-top: 18.3vh;\r\n\r\n    .left {\r\n      flex-basis: 54%;\r\n      padding-left: 5rem;\r\n      h1 {\r\n        font-size: set-font-size($token-fonts-h-1-desktop-size);\r\n        font-weight: $token-fonts-h-1-desktop-weight;\r\n      }\r\n\r\n      h2 {\r\n        font-size: set-font-size($token-fonts-h-2-desktop-size);\r\n        font-weight: $token-fonts-h-2-desktop-weight;\r\n        span {\r\n          color: $token-colors-secondary-2;\r\n        }\r\n      }\r\n\r\n      .msg {\r\n        font-size: set-font-size($token-fonts-para-size);\r\n        line-height: 113%;\r\n        letter-spacing: $token-fonts-para-spacing;\r\n        margin-top: 4rem;\r\n        font-weight: normal;\r\n      }\r\n\r\n      .caption {\r\n        font-size: set-font-size($token-fonts-caption-large-size);\r\n        margin-top: 4rem;\r\n      }\r\n\r\n      button {\r\n        background-color: $token-colors-secondary-2;\r\n        color: set-text-col($token-colors-secondary-2);\r\n        margin-top: 3.5rem;\r\n        padding: 1.15rem 3.4rem;\r\n        font-size: set-font-size($token-fonts-button-size);\r\n        font-weight: 600;\r\n        border: none;\r\n        cursor: pointer;\r\n        outline: none;\r\n\r\n        user-select: none;\r\n\r\n        transition: background-color 0.2s ease-in-out;\r\n\r\n        &:hover {\r\n          background-color: lighten($token-colors-secondary-2, 10);\r\n        }\r\n\r\n        &:active {\r\n          background-color: darken($token-colors-secondary-2, 10);\r\n        }\r\n      }\r\n    }\r\n\r\n    .right {\r\n      flex: 1;\r\n      background-color: $token-colors-secondary-1;\r\n      border-radius: 3rem;\r\n\r\n      img {\r\n        width: 100%;\r\n      }\r\n\r\n      .colors {\r\n        display: flex;\r\n        justify-content: center;\r\n        margin: 3.6rem 0 3.2rem 0;\r\n        & > div {\r\n          width: 10.7rem;\r\n          height: 10.7rem;\r\n          border-radius: 50%;\r\n\r\n          &.c-1 {\r\n            background-color: $token-colors-extra-1;\r\n          }\r\n          &.c-2 {\r\n            background-color: $token-colors-extra-2;\r\n          }\r\n          &.c-3 {\r\n            background-color: $token-colors-extra-3;\r\n          }\r\n\r\n          &:not(:last-of-type) {\r\n            margin-right: 3rem;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"layout\">\n  <div class=\"wrapper\">\n    <div class=\"left\">\n      <h1>AIR BOOST</h1>\n      <h2>Designed for <span>maximum speed</span></h2>\n\n      <p class=\"msg\">\n        with a soft and lightweight finish to give you the max boost of speed\n      </p>\n\n      <p class=\"caption\">Price : $199</p>\n\n      <button>Buy now</button>\n    </div>\n    <div class=\"right\">\n      <img src=\"../assets/shoes.png\" alt=\"shoes\" />\n      <div class=\"colors\">\n        <div class=\"c-1\"></div>\n        <div class=\"c-2\"></div>\n        <div class=\"c-3\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-36eff12dcb6a05bbeef95936ce555759",
            "file": "src/stories/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.scss"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 41
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 47,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.scss'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size:string = 'medium';\n  // size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../scss/styles.scss\";\n.storybook-button {\n  font-family: $token-fonts-button-family;\n  font-weight: 600;\n  border: 0;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n  outline: none;\n\n  user-select: none;\n  transition: background-color 0.2s ease-in-out;\n\n  &--primary {\n    color: set-text-col($token-colors-secondary-2);\n    background-color: $token-colors-secondary-2;\n\n    &:hover {\n      background-color: lighten($token-colors-secondary-2, 10);\n    }\n\n    &:active {\n      background-color: darken($token-colors-secondary-2, 10);\n    }\n  }\n\n  &--secondary {\n    color: $token-colors-secondary-2;\n    background-color: transparent;\n    // box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n    box-shadow: $token-colors-secondary-2 0px 0px 0px 1px inset;\n\n    &:hover {\n      background-color: $token-colors-secondary-2;\n      color: set-text-col($token-colors-secondary-2);\n    }\n\n    &:active {\n      background-color: darken($token-colors-secondary-2, 10);\n    }\n  }\n\n  &--small {\n    font-size: set-font-size(\n      $token-fonts-button-size - $token-fonts-button-size / 4\n    );\n    padding: 0.95rem 3.2rem;\n  }\n\n  &--medium {\n    font-size: set-font-size($token-fonts-button-size);\n    padding: 1.15rem 3.4rem;\n  }\n\n  &--large {\n    font-size: set-font-size(\n      $token-fonts-button-size + $token-fonts-button-size / 4\n    );\n    padding: 1.35rem 3.6rem;\n  }\n}\n",
                    "styleUrl": "./button.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 49
                    }
                }
            }
        },
        {
            "name": "ColorComponent",
            "id": "component-ColorComponent-f053d025a23196d211a5832894b09926",
            "file": "src/stories/colors/color.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-Color",
            "styleUrls": [
                "./color.scss"
            ],
            "styles": [],
            "template": "<div [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "description": "<p>color</p>\n",
                    "line": 24
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-Color',\r\n  template: `\r\n    <div [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\r\n    </div>\r\n  `,\r\n  styleUrls: ['./color.scss'],\r\n})\r\nexport default class ColorComponent {\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n/**\r\n   * color\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  color = 'primary';\r\n\r\n\r\n  public get classes(): string[] {\r\n\r\n    return ['color', this.color];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../scss/styles.scss\";\r\n.color {\r\n  width: 5rem;\r\n  height: 5rem;\r\n\r\n  &.primary {\r\n    background-color: $token-colors-primary;\r\n  }\r\n\r\n  &.secondary-1 {\r\n    background-color: $token-colors-secondary-1;\r\n  }\r\n\r\n  &.secondary-2 {\r\n    background-color: $token-colors-secondary-2;\r\n  }\r\n\r\n  &.extra-1 {\r\n    background-color: $token-colors-extra-1;\r\n  }\r\n\r\n  &.extra-2 {\r\n    background-color: $token-colors-extra-2;\r\n  }\r\n\r\n  &.extra-3 {\r\n    background-color: $token-colors-extra-3;\r\n  }\r\n}\r\n",
                    "styleUrl": "./color.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 27
                    }
                }
            }
        },
        {
            "name": "TodoComponent",
            "id": "component-TodoComponent-f31fca7c05bfb75be9ed265e9a61aa96",
            "file": "src/app/components/todo/todo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-todo",
            "styleUrls": [
                "./todo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./todo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "todo",
                    "line": 10,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss']\n})\nexport class TodoComponent implements OnInit {\n\n  @Input() todo:any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../scss/styles.scss\";\r\n.t {\r\n  color: $token-colors-extra-2;\r\n}\r\n",
                    "styleUrl": "./todo.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p class=\"t\">{{ todo.title }}</p>\n"
        },
        {
            "name": "TodosComponent",
            "id": "component-TodosComponent-3e6297f37ec4aeca4d2325c29ace9108",
            "file": "src/app/components/todos/todos.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-todos",
            "styleUrls": [
                "./todos.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./todos.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "todos",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { TodosService } from \"../../services/todos.service\";\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.scss']\n})\nexport class TodosComponent implements OnInit {\n\n  todos:any;\n\n  constructor(private ts:TodosService) { \n  }\n  \n  ngOnInit(): void {\n    this.todos = this.ts.getTodos();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./todos.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ts",
                        "type": "TodosService"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "ts",
                        "type": "TodosService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-todo *ngFor=\"let todo of todos\" [todo]=\"todo\"></app-todo>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "TodoComponent"
                        },
                        {
                            "name": "TodosComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "ExtraOne",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/colors/Color.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ExtraThree",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/colors/Color.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ExtraTwo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/colors/Color.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/colors/Color.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SecondaryOne",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/colors/Color.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SecondaryTwo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/colors/Color.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/colors/Color.stories.ts",
                "type": "Story<Color>",
                "defaultValue": "(args: Color) => ({\r\n  component: Color,\r\n  props: args,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/colors/Color.stories.ts": [
                {
                    "name": "ExtraOne",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/colors/Color.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ExtraThree",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/colors/Color.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ExtraTwo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/colors/Color.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/colors/Color.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SecondaryOne",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/colors/Color.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SecondaryTwo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/colors/Color.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/colors/Color.stories.ts",
                    "type": "Story<Color>",
                    "defaultValue": "(args: Color) => ({\r\n  component: Color,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/button/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 6,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/todo/todo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TodoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/todos/todos.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TodosComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/todos.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TodosService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/colors/Color.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtraOne",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/colors/Color.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtraThree",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/colors/Color.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtraTwo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/colors/Color.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/colors/Color.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SecondaryOne",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/colors/Color.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SecondaryTwo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/colors/Color.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/colors/color.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorComponent",
                "coveragePercent": 66,
                "coverageCount": "2/3",
                "status": "good"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}